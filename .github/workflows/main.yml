# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container: ubuntu
    name: 'm2 tests & build'
    services:
      mysql:
        image: docker://mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: magento
          MYSQL_DATABASE: magento
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      elasticsearch:
        image: docker://elasticsearch:7.1.0
        ports:
          - 9200:9200
        options: -e="discovery.type=single-node" --health-cmd="curl http://localhost:9200/_cluster/health" --health-interval=10s --health-timeout=5s --health-retries=10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: composer
          extension: soap 

      - name: Checkout Repository
        uses: actions/checkout@v1
          
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v1
       
      - name: 'install fresh magento repo'
        if: ${{true}}
        uses: MAD-I-T/magento-actions@master
        env:
          COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}
        with:
          process: 'create-project'
          magento_version: 2.4.4
          no_push: 1 //uncomment this to prevent src code from being pushed to repo
                 
      - name: Prepare Composer Artifact Repo
        run: |
          mkdir artifact
          composer config -g repositories.artifact path "$(pwd)/artifact/*"
          
      - name: Make vertex tax module available in artifact
        uses: actions/checkout@v2
        with:
          repository: vertexinc/vertex-tax-module
          ref: DEV
          token: ${{ secrets.PAT }}
          path: artifact/vertex-tax-module
          
      - name: Make SDK available in artifact
        uses: actions/checkout@v2
        with:
          repository: vertexinc/sdk-module
          ref: main
          token: ${{ secrets.PAT }}
          path: artifact/sdk-module
                 
      - name: Make request logging module available in artifact
        uses: actions/checkout@v2
        with:
          repository: vertexinc/request-logging-module
          ref: main
          token: ${{ secrets.PAT }}
          path: artifact/request-logging-module
          
      - name: Make request logging api module available in artifact
        uses: actions/checkout@v2
        with:
          repository: vertexinc/request-logging-api-module
          ref: main
          token: ${{ secrets.PAT }}
          path: artifact/request-logging-api-module

      - name: Make address validation module available in artifact
        uses: actions/checkout@v2
        with:
          repository: vertexinc/address-validation-module
          ref: main
          token: ${{ secrets.PAT }}
          path: artifact/address-validation-module
          
      - name: Make address validation api module available in artifact
        uses: actions/checkout@v2
        with:
          repository: vertexinc/address-validation-api-module
          ref: main
          token: ${{ secrets.PAT }}
          path: artifact/address-validation-api-module
     
      - name: display pwd
        run: ll $(pwd)
             echo $(pwd)
          
      - name: Update require for vertex modules
        run: composer require --no-update vertexinc/vertex-tax-module vertexinc/request-logging-module vertexinc/request-logging-api-module vertexinc/sdk-module vertexinc/address-validation-module vertexinc/address-validation-api-module
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
          
      - name: Composer Install
        run: COMPOSER_MIRROR_PATH_REPOS=1 composer install --no-interaction -o
        env:
          COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}
            
      - name: 'launch magento2 unit test only on email module'
        if: always()
        uses: MAD-I-T/magento-actions@v3.11
        env:
          COMPOSER_AUTH: ${{secrets.COMPOSER_AUTH}}
        with:
          process: 'unit-test'
          elasticsearch: 1
          unit_test_subset_path: 'vendor/magento/module-email/Test/Unit'
